<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AwesomeDevEvents.API</name>
    </assembly>
    <members>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.GetAll">
            <summary>
            Obter todos os eventos
            </summary>
            <returns>Coleção de eventos</returns>
            <response code="200">Sucesso</response>
        </member>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.GetById(System.Guid)">
            <summary>
            Obter evento específico
            </summary>
            <param name="id">Identificador do evento</param>
            <returns>Dados do evento</returns>
            <response code="200">Sucesso</response>
            <response code="404">Não encontrado</response>
        </member>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.Post(AwesomeDevEvents.API.Entities.DevEvent)">
            <summary>
            Cadastra um evento
            </summary>
            <remarks>
            {"title":"string", ","description"."string", ","startDate":2023-02-27T17:59:14.141Z"," ","endDate":2023-02-27T17:59:14.141Z")
            </remarks>
            <param name="devEvent">Dados do evento</param>
            <returns>Objeto recém criado</returns>
            <response code="201">Sucesso</response>
        </member>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.Update(System.Guid,AwesomeDevEvents.API.Entities.DevEvent)">
            <summary>
            Atualiza um evento
            </summary>
            <remarks>
            {"title":"string", ","description"."string", ","startDate":2023-02-27T17:59:14.141Z"," ","endDate":2023-02-27T17:59:14.141Z")
            </remarks>
            <param name="id">Identificador do evento</param>
            <param name="input">Dados do evento</param>
            <returns>Nada</returns>
            <response code="204">Sucesso</response>
            <response code="404">Não encontrado</response>
        </member>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.PostSpekaer(System.Guid,AwesomeDevEvents.API.Entities.DevEventSpeaker)">
            <summary>
            Cadastrar palestrante
            </summary>
            <remarks>
            {"name":"string","talkTitle":"string","talkDescription":"string","linkedInProfile":"string"}
            </remarks>
            <param name="id">Identificador do evento</param>
            <param name="speaker">Dados do palestrante</param>
            <returns>Nada</returns>
            <response code="204">Sucesso</response>
            <response code="404">Não encontrado</response>
        </member>
        <member name="M:AwesomeDevEvents.API.Controllers.DevEventsController.Delete(System.Guid)">
            <summary>
            Deletar um evento
            </summary>
            <param name="id">Identificador do evento</param>
            <returns>Nada</returns>
            <response code="204">Sucesso</response>
            <response code="404">Não encontrado</response>
        </member>
        <member name="T:AwesomeDevEvents.API.Persistence.Migrations.FirstMigration">
            <inheritdoc />
        </member>
        <member name="M:AwesomeDevEvents.API.Persistence.Migrations.FirstMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AwesomeDevEvents.API.Persistence.Migrations.FirstMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AwesomeDevEvents.API.Persistence.Migrations.FirstMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
